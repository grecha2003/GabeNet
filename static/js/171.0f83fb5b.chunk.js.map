{"version":3,"file":"static/js/171.0f83fb5b.chunk.js","mappings":"gNACA,GAAgB,QAAU,0BAA0B,OAAS,yBAAyB,eAAiB,iCAAiC,QAAU,0BAA0B,eAAiB,iCAAiC,QAAU,2B,UCWxO,EARmB,SAAC,GAAkB,IAAhBA,EAAe,EAAfA,GAAIC,EAAW,EAAXA,KACzB,OACC,gBAAKC,UAAWC,EAAAA,OAAhB,UACC,SAAC,KAAD,CAASC,GAAI,aAAeJ,EAA5B,SAAiCC,OCApC,EAJgB,SAAC,GAAiB,IAAfI,EAAc,EAAdA,QAClB,OAAO,gBAAKH,UAAWC,EAAAA,QAAhB,SAAkCE,K,UCEpCC,EAAmB,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YAK3B,OACC,SAAC,KAAD,CACCC,cAAe,CACdC,eAAgB,IAEjBC,SAAU,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,WATH,SAACD,GACpBJ,EAAYI,GASVE,CAAcF,EAAOF,gBACrBG,EAAU,CAAED,OAAQ,KACpBG,QAAQC,IAAIJ,IAPd,UAUC,SAAC,KAAD,WACC,iBAAKT,UAAWC,EAAAA,eAAhB,WACC,SAAC,KAAD,CAAOa,GAAI,WAAYf,KAAM,iBAAkBgB,YAAa,wBAC5D,0BACC,mBAAQC,KAAM,SAAUhB,UAAWC,EAAAA,QAAnC,8CAiCN,EAvBiB,SAAC,GAAmC,IAAjCgB,EAAgC,EAAhCA,aAAcZ,EAAkB,EAAlBA,YAC7Ba,EAAQD,EAERE,EAAiBD,EAAME,MAAMC,KAAI,SAACC,GAAD,OACpC,SAAC,EAAD,CAAYvB,KAAMuB,EAAOvB,KAAMD,GAAIwB,EAAOxB,IAASwB,EAAOxB,OAEvDyB,EAAeL,EAAMM,SAASH,KAAI,SAACI,GAAD,OACrC,SAAC,EAAD,CAAS3B,GAAI2B,EAAE3B,GAAIK,QAASsB,EAAEtB,SAAcsB,EAAE3B,OAG/C,OACC,iBAAKE,UAAWC,EAAAA,QAAhB,WACC,gBAAKD,UAAWC,EAAAA,eAAhB,UACC,gBAAKD,UAAWC,EAAAA,OAAhB,SAAiCkB,OAElC,iBAAKnB,UAAWC,EAAAA,SAAhB,WACC,yBAAMsB,KACN,SAACnB,EAAD,CAAkBC,YAAaA,W,oBC9BnC,GAAeqB,E,QAAAA,KAAQC,EAAAA,EAAAA,KAjBD,SAACT,GACtB,MAAO,CACND,aAAcC,EAAMD,iBAIG,SAACW,GACzB,MAAO,CACNvB,YAAa,SAACE,GACbqB,GAASC,EAAAA,EAAAA,IAAmBtB,KAE7BuB,qBAAsB,SAACC,GACtBH,GAASI,EAAAA,EAAAA,IAA4BD,SAK6BE,EAAAA,EAArE,CAAmFC","sources":["webpack://it-kamasutra-courses/./src/Components/Messages/Messages.module.scss?784b","Components/Messages/DialogItem/DialogsItem.jsx","Components/Messages/Message/Message.jsx","Components/Messages/Messages.jsx","Components/Messages/MessagesContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Messages_dialogs__OywV3\",\"dialog\":\"Messages_dialog__UCONN\",\"dialogs__items\":\"Messages_dialogs__items__qOUlc\",\"message\":\"Messages_message__JsxH7\",\"messages__send\":\"Messages_messages__send__-hb1w\",\"btnSend\":\"Messages_btnSend__tEQza\"};","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport classes from '../Messages.module.scss';\r\n\r\nconst DialogItem = ({ id, name }) => {\r\n\treturn (\r\n\t\t<div className={classes.dialog}>\r\n\t\t\t<NavLink to={'/messages/' + id}>{name}</NavLink>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default DialogItem;\r\n","import React from 'react';\r\nimport classes from '../Messages.module.scss';\r\n\r\nconst Message = ({ message }) => {\r\n\treturn <div className={classes.message}>{message}</div>;\r\n};\r\n\r\nexport default Message;\r\n","import React from 'react';\r\nimport DialogItem from './DialogItem/DialogsItem';\r\nimport Message from './Message/Message';\r\nimport classes from './Messages.module.scss';\r\nimport { Formik, Form, Field } from 'formik';\r\n\r\nconst AddEnterMessages = ({ sendMessage }) => {\r\n\tlet addNewMessage = (values) => {\r\n\t\tsendMessage(values);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tinitialValues={{\r\n\t\t\t\tnewMessageBody: '',\r\n\t\t\t}}\r\n\t\t\tonSubmit={(values, { resetForm }) => {\r\n\t\t\t\taddNewMessage(values.newMessageBody);\r\n\t\t\t\tresetForm({ values: '' });\r\n\t\t\t\tconsole.log(values);\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<Form>\r\n\t\t\t\t<div className={classes.messages__send}>\r\n\t\t\t\t\t<Field as={'textarea'} name={'newMessageBody'} placeholder={'Enter your message'} />\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<button type={'submit'} className={classes.btnSend}>\r\n\t\t\t\t\t\t\t^ω^ Send ^ω^\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</Form>\r\n\t\t</Formik>\r\n\t);\r\n};\r\n\r\nconst Messages = ({ messagesPage, sendMessage }) => {\r\n\tlet state = messagesPage;\r\n\r\n\tlet dialogsElement = state.users.map((dialog) => (\r\n\t\t<DialogItem name={dialog.name} id={dialog.id} key={dialog.id} />\r\n\t));\r\n\tlet DialogsDates = state.messages.map((d) => (\r\n\t\t<Message id={d.id} message={d.message} key={d.id} />\r\n\t));\r\n\r\n\treturn (\r\n\t\t<div className={classes.dialogs}>\r\n\t\t\t<div className={classes.dialogs__items}>\r\n\t\t\t\t<div className={classes.dialog}>{dialogsElement}</div>\r\n\t\t\t</div>\r\n\t\t\t<div className={classes.messages}>\r\n\t\t\t\t<div>{DialogsDates}</div>\r\n\t\t\t\t<AddEnterMessages sendMessage={sendMessage} />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Messages;\r\n","import { sendMessageCreator, updateNewMessageBodyCreator } from '../../Redux/messagesReducer';\r\nimport Messages from './Messages';\r\nimport { connect } from 'react-redux';\r\nimport { AuthRedirect } from '../../hoc/AuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tmessagesPage: state.messagesPage,\r\n\t};\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\tsendMessage: (newMessageBody) => {\r\n\t\t\tdispatch(sendMessageCreator(newMessageBody));\r\n\t\t},\r\n\t\tupdateNewMessageBody: (body) => {\r\n\t\t\tdispatch(updateNewMessageBodyCreator(body));\r\n\t\t},\r\n\t};\r\n};\r\n\r\nexport default compose(connect(mapStateToProps, mapDispatchToProps), AuthRedirect)(Messages);\r\n"],"names":["id","name","className","classes","to","message","AddEnterMessages","sendMessage","initialValues","newMessageBody","onSubmit","values","resetForm","addNewMessage","console","log","as","placeholder","type","messagesPage","state","dialogsElement","users","map","dialog","DialogsDates","messages","d","compose","connect","dispatch","sendMessageCreator","updateNewMessageBody","body","updateNewMessageBodyCreator","AuthRedirect","Messages"],"sourceRoot":""}