{"version":3,"file":"static/js/603.3866ec40.chunk.js","mappings":"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","sources":["webpack://it-kamasutra-courses/./src/Components/Profile/MyPosts/AddPost/AddPosts.module.scss?5b49","Components/Profile/MyPosts/AddPost/AddPosts.jsx","webpack://it-kamasutra-courses/./src/Components/Profile/MyPosts/MyPosts.module.scss?c061","Components/Profile/MyPosts/MyPosts.jsx","Components/Profile/MyPosts/MyPostsContainer.jsx","webpack://it-kamasutra-courses/./src/Components/Profile/ProfileInfo/ProfileInfo.module.scss?0d8a","Components/Profile/ProfileInfo/ProfileStatusHooks.jsx","../node_modules/.pnpm/react-bootstrap@2.4.0_biqbaboplfbrettd7655fr4n2y/node_modules/react-bootstrap/esm/Spinner.js","webpack://it-kamasutra-courses/./src/Components/common/MiniSpinner/MiniSpinner.module.scss?aa5d","Components/common/MiniSpinner/MiniSpinner.jsx","Components/Profile/ProfileInfo/ProfileInfo.jsx","Components/Profile/Profile.jsx","Components/Profile/ProfileContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"posts\":\"AddPosts_posts__ZSVno\",\"post__item\":\"AddPosts_post__item__-7sNi\",\"post__text\":\"AddPosts_post__text__3EfUf\",\"post__ptext\":\"AddPosts_post__ptext__fKrQP\"};","import React from 'react';\r\nimport classes from './AddPosts.module.scss';\r\nimport avaImg from '../../../assets/avaUsers.png';\r\n\r\nconst AddPosts = ({ message, LikesCount, profile }) => {\r\n\treturn (\r\n\t\t<div className={classes.posts}>\r\n\t\t\t<div className={classes.post}>\r\n\t\t\t\t<div className={classes.post__item}>\r\n\t\t\t\t\t<img\r\n\t\t\t\t\t\tsrc={profile.photos.large || avaImg}\r\n\t\t\t\t\t\twidth={'45px'}\r\n\t\t\t\t\t\theight={'45px'}\r\n\t\t\t\t\t\talt=\"post avatar\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<div className={classes.post__text}>{message}</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={classes.post__ptext}>\r\n\t\t\t\t\t<span>like: {LikesCount}</span>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default AddPosts;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"write__post\":\"MyPosts_write__post__XwWcN\",\"write__btn\":\"MyPosts_write__btn__jBtXG\"};","import React from 'react';\r\nimport AddPosts from './AddPost/AddPosts';\r\nimport classes from './MyPosts.module.scss';\r\nimport { Formik, Form, Field } from 'formik';\r\n\r\nconst MyPosts = ({ posts, addPost, profile }) => {\r\n\tlet postsElement = posts.map((p) => (\r\n\t\t<AddPosts\r\n\t\t\tid={p.id}\r\n\t\t\tmessage={p.message}\r\n\t\t\tLikesCount={p.LikesCount}\r\n\t\t\tkey={p.id}\r\n\t\t\tprofile={profile}\r\n\t\t/>\r\n\t));\r\n\r\n\t// let newPostElement = React.createRef();\r\n\t// let onPostCnange = () => {\r\n\t// \tlet text = newPostElement.current.value;\r\n\t// \tupdateNewPostText(text);\r\n\t// };\r\n\r\n\tlet onAddPost = (values) => {\r\n\t\tif (values) {\r\n\t\t\taddPost(values);\r\n\t\t} else {\r\n\t\t\talert('empty text box');\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tinitialValues={{\r\n\t\t\t\tnewPostText: '',\r\n\t\t\t}}\r\n\t\t\tonSubmit={(values, { resetForm }) => {\r\n\t\t\t\tonAddPost(values.newPostText);\r\n\t\t\t\tresetForm({ values: '' });\r\n\t\t\t\tconsole.log(values);\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<div>\r\n\t\t\t\t<Form>\r\n\t\t\t\t\t<div className={classes.posts}>\r\n\t\t\t\t\t\t<div className={classes.write__post}>\r\n\t\t\t\t\t\t\t<Field as={'textarea'} name={'newPostText'} placeholder={'Enter your post'} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<button className={classes.write__btn} type={'submit'}>\r\n\t\t\t\t\t\t\t\tAdd post\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{postsElement}\r\n\t\t\t\t</Form>\r\n\t\t\t</div>\r\n\t\t</Formik>\r\n\t);\r\n};\r\n\r\nexport default MyPosts;\r\n","import { addPostActionCreator } from '../../../Redux/profileReducer';\r\nimport MyPosts from './MyPosts';\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tposts: state.profilePage.posts,\r\n\t\tnewPostText: state.profilePage.newPostText,\r\n\t};\r\n};\r\nlet mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\taddPost: (newPostText) => {\r\n\t\t\tdispatch(addPostActionCreator(newPostText));\r\n\t\t},\r\n\t};\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"img__top\":\"ProfileInfo_img__top__16OrX\",\"img__avatar\":\"ProfileInfo_img__avatar__ixl4h\",\"profile__text\":\"ProfileInfo_profile__text__jUeln\",\"profileAbout\":\"ProfileInfo_profileAbout__eseZk\",\"moduleFiles\":\"ProfileInfo_moduleFiles__s8Vr5\",\"inputFile\":\"ProfileInfo_inputFile__ncbZl\",\"labelFile\":\"ProfileInfo_labelFile__SoN4j\"};","import React, { useEffect, useState } from 'react';\r\n\r\nconst ProfileStatusHooks = (props) => {\r\n\tlet [editMode, setEditMode] = useState(false);\r\n\tlet [status, setStatus] = useState(props.status);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetStatus(props.status);\r\n\t}, [props.status]);\r\n\r\n\tconst activateEditMod = () => {\r\n\t\tsetEditMode(true);\r\n\t};\r\n\r\n\tconst deactivateEditMod = () => {\r\n\t\tsetEditMode(false);\r\n\t\tprops.updateStatus(status);\r\n\t};\r\n\r\n\tconst onStatusChange = (e) => {\r\n\t\tsetStatus(e.currentTarget.value);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{!editMode && (\r\n\t\t\t\t<div style={{ display: 'block', width: '150px' }}>\r\n\t\t\t\t\t<span style={{ width: '150px' }} onDoubleClick={activateEditMod}>\r\n\t\t\t\t\t\t{props.status || 'No status'}\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t\t{editMode && (\r\n\t\t\t\t<div style={{ display: 'block', width: '150px', height: '0 auto' }}>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tonChange={onStatusChange}\r\n\t\t\t\t\t\tvalue={status}\r\n\t\t\t\t\t\tautoFocus={true}\r\n\t\t\t\t\t\tonBlur={deactivateEditMod}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ProfileStatusHooks;\r\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Spinner = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  variant,\n  animation,\n  size,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  className,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'spinner');\n  const bsSpinnerPrefix = `${bsPrefix}-${animation}`;\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, bsSpinnerPrefix, size && `${bsSpinnerPrefix}-${size}`, variant && `text-${variant}`)\n  });\n});\nSpinner.displayName = 'Spinner';\nexport default Spinner;","// extracted by mini-css-extract-plugin\nexport default {\"miniSpinner\":\"MiniSpinner_miniSpinner__VsrLf\"};","import React from 'react';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\nimport classes from './MiniSpinner.module.scss';\r\n\r\nconst MiniSpinner = () => {\r\n\treturn (\r\n\t\t<div style={{ display: 'block' }}>\r\n\t\t\t<Spinner className={classes.miniSpinner} animation=\"border\" role=\"status\">\r\n\t\t\t\t<span className=\"visually-hidden\">Loading...</span>\r\n\t\t\t</Spinner>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default MiniSpinner;\r\n","import React from 'react';\r\nimport classes from './ProfileInfo.module.scss';\r\nimport Spinner from '../../common/Spinner/Spinner';\r\nimport avaImg from '../../assets/avaUsers.png';\r\nimport ProfileStatusHooks from './ProfileStatusHooks';\r\nimport MiniSpinner from '../../common/MiniSpinner/MiniSpinner';\r\n\r\nconst ProfileInfo = ({ profile, status, updateStatus, isOwner, savePhoto, isLoaded }) => {\r\n\tif (!profile) {\r\n\t\treturn <Spinner />;\r\n\t}\r\n\r\n\tconst onMainPhotoSelected = (e) => {\r\n\t\tif (e.target.files.length) {\r\n\t\t\tsavePhoto(e.target.files[0]);\r\n\t\t}\r\n\t};\r\n\r\n\tconst setMiniSpinner = () => {\r\n\t\tif (isLoaded === true) {\r\n\t\t\treturn <MiniSpinner />;\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div>\r\n\t\t\t\t<img\r\n\t\t\t\t\tclassName={classes.img__top}\r\n\t\t\t\t\tsrc=\"https://kartinkin.net/uploads/posts/2021-07/1625635272_4-kartinkin-com-p-estetichnie-foni-minimalizm-krasivie-foni-5.jpg\"\r\n\t\t\t\t\twidth={'100%'}\r\n\t\t\t\t\theight={'240px'}\r\n\t\t\t\t\talt=\"user background\"\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div className={classes.profile__text}>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<div className={classes.moduleFiles} style={{ position: 'relative' }}>\r\n\t\t\t\t\t\t{setMiniSpinner()}\r\n\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\tclassName={classes.img__avatar}\r\n\t\t\t\t\t\t\tsrc={profile.photos.large || avaImg}\r\n\t\t\t\t\t\t\twidth={'150px'}\r\n\t\t\t\t\t\t\theight={'150px'}\r\n\t\t\t\t\t\t\talt=\"user avatar\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{isOwner && (\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype=\"file\"\r\n\t\t\t\t\t\t\t\tid=\"updateAva\"\r\n\t\t\t\t\t\t\t\tonChange={onMainPhotoSelected}\r\n\t\t\t\t\t\t\t\tclassName={classes.inputFile}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t{isOwner && (\r\n\t\t\t\t\t\t\t<label htmlFor=\"updateAva\" className={classes.labelFile}>\r\n\t\t\t\t\t\t\t\tUpdate avatar\r\n\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<ProfileStatusHooks status={status} updateStatus={updateStatus} />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={classes.profileAbout}>\r\n\t\t\t\t\t<span>{profile.fullName}</span>\r\n\t\t\t\t\t<span>\r\n\t\t\t\t\t\t<a href={profile.contacts.website}>{profile.contacts.website ? 'Web Site' : ''}</a>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<span>\r\n\t\t\t\t\t\t<a href={profile.contacts.vk}>{profile.contacts.vk ? 'VK' : ''}</a>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<span>\r\n\t\t\t\t\t\t<a href={profile.contacts.github}>{profile.contacts.github ? 'GitHub' : ''}</a>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<span>\r\n\t\t\t\t\t\t<a href={profile.contacts.instagram}>{profile.contacts.instagram ? 'Instagram' : ''}</a>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<span>Looking for a job: {profile.lookingForAJob ? 'Yes' : 'No'}</span>\r\n\t\t\t\t\t<span>{profile.lookingForAJobDescription}</span>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ProfileInfo;\r\n","import React from 'react';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\n\r\nconst Profile = (props) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<ProfileInfo\r\n\t\t\t\tsavePhoto={props.savePhoto}\r\n\t\t\t\tisOwner={props.isOwner}\r\n\t\t\t\tprofile={props.profile}\r\n\t\t\t\tstatus={props.status}\r\n\t\t\t\tupdateStatus={props.updateStatus}\r\n\t\t\t\tisLoaded={props.isLoaded}\r\n\t\t\t/>\r\n\t\t\t<MyPostsContainer profile={props.profile} />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Profile;\r\n","import React, { Component } from 'react';\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux';\r\nimport { getUserProfileTC, getStatusTC, updateStatus, savePhoto } from '../../Redux/profileReducer';\r\nimport { useParams } from 'react-router';\r\nimport { AuthRedirect } from '../../hoc/AuthRedirect';\r\nimport { compose } from 'redux';\r\nimport Spinner from '../common/Spinner/Spinner';\r\n\r\nconst withRouter = (WrappedComponent) => (props) => {\r\n\tconst params = useParams();\r\n\treturn <WrappedComponent {...props} params={params} />;\r\n};\r\n\r\nclass ProfileContainer extends Component {\r\n\trefreshProfile() {\r\n\t\tlet userId = this.props.params.userId;\r\n\t\tif (!userId) {\r\n\t\t\tuserId = this.props.authorizedUserId;\r\n\t\t\tif (!userId) {\r\n\t\t\t\tthis.props.history.push('/login');\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.props.getUserProfileTC(userId);\r\n\t\tthis.props.getStatusTC(userId);\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.refreshProfile();\r\n\t}\r\n\r\n\tcomponentDidUpdate(prevProps) {\r\n\t\tif (this.props.params.userId !== prevProps.params.userId) {\r\n\t\t\tthis.refreshProfile();\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\tif (!this.props.profile) {\r\n\t\t\treturn <Spinner />;\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<Profile\r\n\t\t\t\t\t{...this.props}\r\n\t\t\t\t\tisOwner={!this.props.params.userId}\r\n\t\t\t\t\tprofile={this.props.profile}\r\n\t\t\t\t\tstatus={this.props.status}\r\n\t\t\t\t\tupdateStatus={this.props.updateStatus}\r\n\t\t\t\t\tsavePhoto={this.props.savePhoto}\r\n\t\t\t\t\tisLoaded={this.props.isLoaded}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n\tprofile: state.profilePage.profile,\r\n\tstatus: state.profilePage.status,\r\n\tauthorizedUserId: state.auth.id,\r\n\tisAuth: state.auth.isAuth,\r\n\tisLoaded: state.profilePage.isLoaded,\r\n});\r\n\r\nexport default compose(\r\n\tconnect(mapStateToProps, { getUserProfileTC, getStatusTC, updateStatus, savePhoto }),\r\n\twithRouter,\r\n\tAuthRedirect\r\n)(ProfileContainer);\r\n"],"names":["message","LikesCount","profile","className","classes","src","photos","large","avaImg","width","height","alt","posts","addPost","postsElement","map","p","id","initialValues","newPostText","onSubmit","values","resetForm","alert","onAddPost","console","log","as","name","placeholder","type","connect","state","profilePage","dispatch","addPostActionCreator","MyPosts","props","useState","editMode","setEditMode","status","setStatus","useEffect","style","display","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","Spinner","React","ref","bsPrefix","variant","animation","size","Component","useBootstrapPrefix","bsSpinnerPrefix","_jsx","classNames","displayName","role","isOwner","savePhoto","isLoaded","position","setMiniSpinner","target","files","length","htmlFor","fullName","href","contacts","website","vk","github","instagram","lookingForAJob","lookingForAJobDescription","ProfileContainer","userId","this","params","authorizedUserId","history","push","getUserProfileTC","getStatusTC","refreshProfile","prevProps","compose","auth","isAuth","WrappedComponent","useParams","AuthRedirect"],"sourceRoot":""}